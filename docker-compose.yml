#
#  docker-compose.yml
#
#  docker-compose architecture inspired by laradock (https://github.com/laradock/laradock)
#  @author     Filip Caladi (xcalad01)
#  @license    MIT
#
version: '3'

services:
  workspace:
    container_name: "workspace"
    build:
      context: ./workspace
      args:
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - INSTALL_DATADOG_TRACING=${INSTALL_DATADOG_TRACING}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    ports:
      - "${WORKSPACE_VUE_CLI_SERVE_HOST_PORT}:8080"
      - "${WORKSPACE_VUE_CLI_UI_HOST_PORT}:8000"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
      - DD_AGENT_HOST=${DD_AGENT_HOST}
      - DD_TRACE_CLI_ENABLED=${DD_TRACE_CLI_ENABLED}
      - DD_DISTRIBUTED_TRACING=${DD_DISTRIBUTED_TRACING}
      - DD_TRACE_ANALYTICS_ENABLED=${DD_TRACE_ANALYTICS_ENABLED}
      - DD_TRACE_NO_AUTOLOADER=${DD_TRACE_NO_AUTOLOADER}
      - DD_TRACE_DEBUG=${DD_TRACE_DEBUG}
      - FIAT_START=${FIAT_START}
      - FIAT_END=${FIAT_END}

  php-fpm:
    container_name: "php_fpm"
    build:
      context: ./php-fpm
      args:
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - "9000"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
      - FAKETIME=${PHP_FPM_FAKETIME}
    depends_on:
      - workspace

  nginx:
    container_name: "nginx"
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm

  db:
    container_name: "postgres"
    image: "postgres:latest"
    restart: unless-stopped
    tty: true
    ports:
    - "${DB_PORT}:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
